// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id Int @default(autoincrement()) @id
  username String @unique()
  email String @unique()
  name String 
  password String
  // dp String ?
  displayName String?
  photoURL String?
  bio String?
  location String?
  wallpaper String?
  website String?
  verified Boolean? @default(false)
  following Int[]
  followers Int []
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Post{
  id Int @default(autoincrement()) @id
  text String 
  image String
  likes Int[]
  senderId Int
  altText String
  // timestamp
  // comments    Comment[] // One-to-many relationship with Comment
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Comment{
  id Int @default(autoincrement()) @id
  text String
  altText String
  image String
  likes Int[]
  senderId Int
  postId Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  // post       Post     @relation(fields: [postId], references: [id])

}

model ThreadComment{
  id Int @default(autoincrement()) @id
  commentId Int 
  text String
  altText String
  image String
  likes Int[]
  senderId Int 
  postId Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}
